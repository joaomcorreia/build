# Generated by Django 4.2.7 on 2025-10-22 16:11

from django.db import migrations, models
import django.db.models.deletion
import media_library.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MediaLibrarySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_file_size_mb', models.IntegerField(default=10)),
                ('max_total_storage_gb', models.FloatField(default=1.0)),
                ('allowed_image_types', models.JSONField(blank=True, default=list)),
                ('allowed_document_types', models.JSONField(blank=True, default=list)),
                ('allowed_video_types', models.JSONField(blank=True, default=list)),
                ('auto_optimize_images', models.BooleanField(default=True)),
                ('auto_generate_thumbnails', models.BooleanField(default=True)),
                ('auto_convert_to_webp', models.BooleanField(default=True)),
                ('image_quality', models.IntegerField(default=85)),
                ('auto_categorize_images', models.BooleanField(default=True)),
                ('require_alt_text', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MediaFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='media_library.mediafolder')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=media_library.models.get_upload_path)),
                ('file_type', models.CharField(choices=[('image', 'Image'), ('document', 'Document'), ('video', 'Video'), ('audio', 'Audio'), ('other', 'Other')], max_length=20)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('image_category', models.CharField(blank=True, choices=[('logo', 'Logo'), ('header', 'Header Image'), ('gallery', 'Gallery Image'), ('product', 'Product Image'), ('background', 'Background Image'), ('icon', 'Icon'), ('other', 'Other')], max_length=20)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('caption', models.TextField(blank=True)),
                ('download_count', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='media_library.mediafolder')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MediaUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=100)),
                ('field_name', models.CharField(blank=True, max_length=100)),
                ('usage_context', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('media_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage', to='media_library.mediafile')),
            ],
            options={
                'unique_together': {('media_file', 'content_type', 'object_id', 'field_name')},
            },
        ),
        migrations.CreateModel(
            name='ImageOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optimization_type', models.CharField(choices=[('thumbnail', 'Thumbnail (150x150)'), ('small', 'Small (300x300)'), ('medium', 'Medium (600x600)'), ('large', 'Large (1200x1200)'), ('webp', 'WebP Conversion'), ('compressed', 'Compressed Original')], max_length=20)),
                ('optimized_file', models.FileField(upload_to='optimized/')),
                ('file_size', models.BigIntegerField()),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('quality', models.IntegerField(default=85)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('original_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimizations', to='media_library.mediafile')),
            ],
            options={
                'unique_together': {('original_file', 'optimization_type')},
            },
        ),
    ]
